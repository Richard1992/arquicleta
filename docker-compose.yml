services:
  mysql:
    image: mysql:8.0
    container_name: mysql-container
    environment:
      MYSQL_DATABASE: db_usuarios           	 # Nombre de la base de datos por defecto
      MYSQL_PASSWORD: root        			     # Contraseña para el nuevo usuario
      MYSQL_ROOT_PASSWORD: root          		 # Contraseña del usuario root  
      MYSQL_INITDB_CHARSET: utf8mb4        		 # Establece el conjunto de caracteres por defecto
      MYSQL_INITDB_COLLATION: utf8mb4_unicode_ci # Establece la colación por defecto
    restart: always
    ports:
      - "3307:3306"
    healthcheck:  # Chequeo de salud para asegurar que MySQL esté listo
      test: ["CMD", "mysqladmin", "ping", "-h", "mysql"]
      interval: 10s
      timeout: 10s
      retries: 10
    volumes:
      - mysql-data:/var/lib/mysql  # Volumen para persistencia de datos
      - ./usuarios/db/db_usuarios.sql:/docker-entrypoint-initdb.d/db_usuarios.sql
      
  postgres:
    image: postgres:13
    container_name: postgres-container
    environment:
      POSTGRES_DB: db_grupos
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    restart: always
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 10s
      retries: 10
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./grupos/db/db_grupos.sql:/docker-entrypoint-initdb.d/db_grupos.sql
      
  usuarios:
    container_name: usuarios-container
    build: 
      context: .
      dockerfile: Dockerfile.usuarios  # Especifica el Dockerfile para usuarios
    ports:
      - "8080:8080"
    environment:
      APP_NAME: arquicleta
      SPRING_PROFILES_ACTIVE: usuarios  # Activa el perfil "usuarios"
      DATASOURCE_URL_USUARIO: jdbc:mysql://mysql:3306/db_usuarios  # Cambiado a 3306
      DATASOURCE_USERNAME: root
      DATASOURCE_PASSWORD: root
      DATASOURCE_DRIVER: com.mysql.cj.jdbc.Driver
      HIBERNATE_DIALECT: org.hibernate.dialect.MySQL8Dialect
    depends_on:
      mysql:
        condition: service_healthy  # Espera a que el contenedor MySQL esté saludable
        
  grupos:
    container_name: grupos-container
    build: 
      context: .
      dockerfile: Dockerfile.grupos  # Especifica el Dockerfile para grupos
    ports:
      - "8081:8081"
    environment:
      APP_NAME: arquicleta
      SPRING_PROFILES_ACTIVE: grupos  # Activa el perfil "grupos"
      DATASOURCE_URL_GRUPO: jdbc:postgresql://postgres:5432/db_grupos
      DATASOURCE_USERNAME: postgres
      DATASOURCE_PASSWORD: postgres
      DATASOURCE_DRIVER: org.postgresql.Driver
      HIBERNATE_DIALECT: org.hibernate.dialect.PostgreSQLDialect
    depends_on:
      postgres:
        condition: service_healthy

# Declaración de volúmenes
volumes:
  mysql-data:  # Nombre del volumen que se usará para persistencia de datos
  postgres-data:
